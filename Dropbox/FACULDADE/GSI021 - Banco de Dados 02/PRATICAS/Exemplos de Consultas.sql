
-- CONDIÇÃO SELECIONA CODIGO, NOME E O NUMERO DE PEDIDOSDO VENDEDOR
SELECT P.CODVEND, V.NOMEVEND, COUNT(P.NUMPED)
FROM PEDIDO P, VENDEDOR V
GROUP BY P.CODVEND, V.NOMEVEND;

-- SELECIONA COD VENDEDOR CONFORME AS DATAS
SELECT VENDEDOR.CODVEND, EXTRACT(MONTH FROM PEDIDO.DATA)
FROM VENDEDOR, PEDIDO
GROUP BY VENDEDOR.CODVEND, PEDIDO.DATA
HAVING VENDEDOR.CODVEND = PEDIDO.CODVEND
ORDER BY VENDEDOR.CODVEND;

-- SELECIONAR VENDEDOR E CONTABILIZA TOTAL DE PEDIDOS REALIZADOS
SELECT DISTINCT VENDEDOR.CODVEND,PEDIDO.DATA AS MES, COUNT(EXTRACT(MONTH FROM PEDIDO.DATA)) AS TOTAL
FROM VENDEDOR, PEDIDO
GROUP BY VENDEDOR.CODVEND, PEDIDO.DATA
ORDER BY VENDEDOR.CODVEND;

-- SELECIONA CODIGO, NOME DE VENDEDOR EM RELAÇÃO AOS PEDIDOS RELIZADOS EM CADA MESS
SELECT DISTINCT VENDEDOR.CODVEND,VENDEDOR.NOMEVEND, 
                EXTRACT(MONTH FROM PEDIDO.DATA) AS MES,
                COUNT(EXTRACT(MONTH FROM PEDIDO.DATA)) AS TOTAL
FROM VENDEDOR, PEDIDO
GROUP BY VENDEDOR.CODVEND,VENDEDOR.NOMEVEND, EXTRACT(MONTH FROM PEDIDO.DATA)
ORDER BY VENDEDOR.CODVEND;

-- INSERE NA TABELA VENDASMES COD, NOME E TOTAL DE VENDAS DE UM VENDEDOR NO MES
INSERT INTO VENDASMES(CODVENDMES,NOMEVEND,MESVEND,TOTALVEND)
SELECT VENDEDOR.CODVEND,
       VENDEDOR.NOMEVEND,
       EXTRACT(MONTH FROM PEDIDO.DATA) AS MESVEND,
       COUNT(PEDIDO.NUMPED) AS TOTALVEND
FROM VENDEDOR INNER JOIN PEDIDO
ON VENDEDOR.CODVEND = PEDIDO.CODVEND
GROUP BY VENDEDOR.CODVEND,VENDEDOR.NOMEVEND, EXTRACT(MONTH FROM PEDIDO.DATA)
ORDER BY VENDEDOR.CODVEND;
COMMIT;

-- CONSULTA SELECIONA COD E NOME DE VENDEDOR QUE ESTEJA DENTRO DA TABELA PEDIDO
SELECT CODVEND, NOMEVEND
FROM VENDEDOR
WHERE CODVEND IN 
(SELECT CODVEND FROM PEDIDO
WHERE PEDIDO.CODVEND = VENDEDOR.CODVEND);

-- AGRUPA O NUMERO DO PEDIDO E O VALOR TOTAL UNITARIO REFERENTE A ESSE PEDIDO
SELECT DISTINCT PEDIDO.NUMPED, SUM(PRODUTO.VALUNIT)
FROM PEDIDO INNER JOIN 
    (ITEMPED INNER JOIN PRODUTO
    ON ITEMPED.CODPROD = PRODUTO.CODPROD)
    ON PEDIDO.NUMPED = ITEMPED.NUMPED
    GROUP BY PEDIDO.NUMPED;
    
-- AGRUPA O NUMERO DO PEDIDO E O VALOR TOTAL UNITARIO REFERENTE A ESSE PEDIDO 2
SELECT DISTINCT VENDEDOR.NOMEVEND, EXTRACT(MONTH FROM PEDIDO.DATA),PEDIDO.NUMPED, SUM(PRODUTO.VALUNIT)
FROM VENDEDOR INNER JOIN 
    (PEDIDO INNER JOIN 
    (ITEMPED INNER JOIN PRODUTO
    ON ITEMPED.CODPROD = PRODUTO.CODPROD)
    ON PEDIDO.NUMPED = ITEMPED.NUMPED)
    ON VENDEDOR.CODVEND = PEDIDO.CODVEND
    GROUP BY PEDIDO.NUMPED,VENDEDOR.NOMEVEND,EXTRACT(MONTH FROM PEDIDO.DATA);

-- CONSULTA TOTAL DE PEDIDOS REALIZADOS DURANTE O MES FEITO POR CADA VENDEDOR

CREATE OR REPLACE PROCEDURE SP_INSERE_VENDASMES(
    CODVEND IN VENDASMES.COD_VEND%TYPE,
    NOMEVEND IN VENDASMES.NOME_VEND%TYPE,
    MESVEND IN VENDASMES.MES_VEND%TYPE,
    TOTALVEND IN VENDASMES.TOTAL_VEND%TYPE)
    AS
BEGIN
	DELETE FROM VENDASMES;
	
    INSERT INTO VENDASMES(COD_VEND,NOME_VEND,MES_VEND,TOTAL_VEND)
    SELECT VENDEDOR.CODVEND,
           VENDEDOR.NOMEVEND,
           EXTRACT(MONTH FROM PEDIDO.DATA) AS MESVEND,
           COUNT(PEDIDO.NUMPED) AS TOTALVEND
    FROM VENDEDOR INNER JOIN PEDIDO
    ON VENDEDOR.CODVEND = PEDIDO.CODVEND
    GROUP BY VENDEDOR.CODVEND,VENDEDOR.NOMEVEND, EXTRACT(MONTH FROM PEDIDO.DATA)
    ORDER BY VENDEDOR.CODVEND;
COMMIT;
END SP_INSERE_VENDASMES;

-- ATUALIZA OS DADOS CONFORME A DATA INSERIDA
CREATE OR REPLACE PROCEDURE SP_ATUALIZA_VENDASMES
    (NOMEVEND IN VENDASMES.NOME_VEND%TYPE,
     MESVEND IN VENDASMES.MES_VEND%TYPE,
     TOTALMES IN VENDASMES.TOTAL_VEND%TYPE,
     DATA IN PEDIDO.DATA%TYPE) AS
BEGIN
    UPDATE VENDASMES
    SET NOME_VEND = NOMEVEND,
        MES_VEND = EXTRACT(MONTH FROM DATA),
        TOTAL_VEND = TOTALMES
    WHERE MES_VEND = EXTRACT(MONTH FROM DATA);
END SP_ATUALIZA_VENDASMES;

-- FUNÇÃO RECEBE NO PARAMETRO CODCLIENTE E RETORNA A SOMA DE SEUS PEDIDOS
CREATE OR REPLACE FUNCTION RETORNA_TOTAL_PED
    (CODCLIENTE CLIENTE.CODCLI%TYPE)
    RETURN FLOAT 
IS
    TOTALPEDIDOS FLOAT;
BEGIN
        SELECT SUM(PRODUTO.VALUNIT) INTO TOTALPEDIDOS
        FROM PRODUTO, ITEMPED
        WHERE PRODUTO.CODPROD = ITEMPED.CODPROD;
        RETURN TOTALPEDIDOS;
END;